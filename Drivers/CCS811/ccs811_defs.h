/*
 * ccs811_defs.h
 *
 *  Created on: Nov 22, 2019
 *      Author: Anthony Mendez
 */

#ifndef CCS811_CCS811_DEFS_H_
#define CCS811_CCS811_DEFS_H_

/********************************************************/
/* header includes */
#ifdef __KERNEL__
#include <linux/types.h>
#include <linux/kernel.h>
#else
#include <stdint.h>
#include <stddef.h>
#endif

/**\name CCS811 Hardware Identifier */
#define CCS811_HW_ID			UINT8_C(0x81)

/**\name I2C Addresses */
#define CCS811_I2C_ADDR_PRIM    UINT8_C(0x5A)
#define CCS811_I2C_ADDR_SEC     UINT8_C(0x5B)

/**\name Register Address */
#define CCS811_STATUS_ADDR               UINT8_C(0x00)
#define CCS811_MEAS_MODE_ADDR            UINT8_C(0x01)
#define CCS811_ALG_RESULT_DATA_ADDR      UINT8_C(0x02)
#define CCS811_RAW_DATA_ADDR             UINT8_C(0x03)
#define CCS811_ENV_DATA_ADDR             UINT8_C(0x05)
#define CCS811_NTC_ADDR               	 UINT8_C(0x06)
#define CCS811_THRESHOLDS_ADDR           UINT8_C(0x10)
#define CCS811_BASELINE_ADDR             UINT8_C(0x11)
#define CCS811_HW_ID_ADDR                UINT8_C(0x20)
#define CCS811_HW_VERSION_ADDR           UINT8_C(0x21)
#define CCS811_FW_BOOT_VERSION_ADDR      UINT8_C(0x23)
#define CCS811_FW_APP_VERSION_ADDR       UINT8_C(0x24)
#define CCS811_ERROR_ID_ADDR             UINT8_C(0xE0)
#define CCS811_APP_ERASE_ADDR            UINT8_C(0xF1)
#define CCS811_APP_DATA_ADDR             UINT8_C(0xF2)
#define CCS811_APP_VERIFY_ADDR           UINT8_C(0xF3)
#define CCS811_APP_START_ADDR            UINT8_C(0xF4)
#define CCS811_SW_RESET_ADDR             UINT8_C(0xFF)

/**\name Register Sizes in Bytes */
#define CCS811_STATUS_BYTE_LEN               UINT8_C(0x01)
#define CCS811_MEAS_MODE_BYTE_LEN            UINT8_C(0x01)
#define CCS811_ALG_RESULT_DATA_BYTE_LEN      UINT8_C(0x08)
#define CCS811_RAW_DATA_BYTE_LEN             UINT8_C(0x02)
#define CCS811_ENV_DATA_BYTE_LEN             UINT8_C(0x04)
#define CCS811_NTC_BYTE_LEN               	 UINT8_C(0x04)
#define CCS811_THRESHOLDS_BYTE_LEN           UINT8_C(0x05)
#define CCS811_BASELINE_BYTE_LEN             UINT8_C(0x02)
#define CCS811_HW_ID_BYTE_LEN                UINT8_C(0x01)
#define CCS811_HW_VERSION_BYTE_LEN           UINT8_C(0x01)
#define CCS811_FW_BOOT_VERSION_BYTE_LEN      UINT8_C(0x02)
#define CCS811_FW_APP_VERSION_BYTE_LEN       UINT8_C(0x02)
#define CCS811_ERROR_ID_BYTE_LEN             UINT8_C(0x01)
#define CCS811_APP_ERASE_BYTE_LEN            UINT8_C(0x04)
#define CCS811_APP_DATA_BYTE_LEN             UINT8_C(0x09)
#define CCS811_APP_VERIFY_BYTE_LEN           UINT8_C(0x01)
#define CCS811_APP_START_BYTE_LEN            UINT8_C(0x01)
#define CCS811_SW_RESET_BYTE_LEN             UINT8_C(0x04)

/**\name Sensor Operation Modes */
#define CCS811_DRIVE_MODE_IDLE_MODE                 UINT8_C(0x00)
#define CCS811_DRIVE_MODE_CONSTANT_1s_MODE          UINT8_C(0x10)
#define CCS811_DRIVE_MODE_PULSE_10s_MODE            UINT8_C(0x20)
#define CCS811_DRIVE_MODE_LP_PULSE_60s_MODE         UINT8_C(0x30)
#define CCS811_DRIVE_MODE_CONSTANT_250ms_MODE       UINT8_C(0x40)

/**\name Macros for bit masking registers */
#define CCS811_STATUS_FW_MODE_MSK		UINT8_C(0x80)
#define CCS811_STATUS_APP_VALID_MSK		UINT8_C(0x10)
#define CCS811_STATUS_DATA_READY_MSK	UINT8_C(0x08)
#define CCS811_STATUS_ERROR_MSK		 	UINT8_C(0x01)

#define CCS811_MEAS_MODE_DRIVE_MODE_MSK	 		UINT8_C(0x70)
#define CCS811_MEAS_MODE_INT_DATARDY_MSK 		UINT8_C(0x08)
#define CCS811_MEAS_MODE_INT_THRESH_MSK	 		UINT8_C(0x04)

#define CCS811_RAW_DATA_CURRENT_MSK		UINT16_C(0xFC00)
#define CCS811_RAW_DATA_RAW_ADC_MSK		UINT16_C(0x03FF)

#define CCS811_ENV_DATA_HUMIDITY_PERC_MSK			UINT16_C(0xFE00)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_MSK			UINT16_C(0x01FF)
#define CCS811_ENV_DATA_HUMIDITY_PERC_64_MSK		UINT16_C(0x8000)
#define CCS811_ENV_DATA_HUMIDITY_PERC_32_MSK		UINT16_C(0x4000)
#define CCS811_ENV_DATA_HUMIDITY_PERC_16_MSK		UINT16_C(0x2000)
#define CCS811_ENV_DATA_HUMIDITY_PERC_8_MSK			UINT16_C(0x1000)
#define CCS811_ENV_DATA_HUMIDITY_PERC_4_MSK			UINT16_C(0x0800)
#define CCS811_ENV_DATA_HUMIDITY_PERC_2_MSK			UINT16_C(0x0400)
#define CCS811_ENV_DATA_HUMIDITY_PERC_1_MSK			UINT16_C(0x0200)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_2_MSK		UINT16_C(0x0100)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_4_MSK		UINT16_C(0x0080)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_8_MSK		UINT16_C(0x0040)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_16_MSK		UINT16_C(0x0020)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_32_MSK		UINT16_C(0x0010)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_64_MSK		UINT16_C(0x0008)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_128_MSK		UINT16_C(0x0004)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_256_MSK		UINT16_C(0x0002)
#define CCS811_ENV_DATA_HUMIDITY_FRAC_1_512_MSK		UINT16_C(0x0001)

#define CCS811_ENV_DATA_TEMPERATURE_PERC_MSK			UINT16_C(0xFE00)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_MSK			UINT16_C(0x01FF)
#define CCS811_ENV_DATA_TEMPERATURE_PERC_64_MSK			UINT16_C(0x8000)
#define CCS811_ENV_DATA_TEMPERATURE_PERC_32_MSK			UINT16_C(0x4000)
#define CCS811_ENV_DATA_TEMPERATURE_PERC_16_MSK			UINT16_C(0x2000)
#define CCS811_ENV_DATA_TEMPERATURE_PERC_8_MSK			UINT16_C(0x1000)
#define CCS811_ENV_DATA_TEMPERATURE_PERC_4_MSK			UINT16_C(0x0800)
#define CCS811_ENV_DATA_TEMPERATURE_PERC_2_MSK			UINT16_C(0x0400)
#define CCS811_ENV_DATA_TEMPERATURE_PERC_1_MSK			UINT16_C(0x0200)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_2_MSK		UINT16_C(0x0100)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_4_MSK		UINT16_C(0x0080)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_8_MSK		UINT16_C(0x0040)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_16_MSK		UINT16_C(0x0020)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_32_MSK		UINT16_C(0x0010)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_64_MSK		UINT16_C(0x0008)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_128_MSK		UINT16_C(0x0004)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_256_MSK		UINT16_C(0x0002)
#define CCS811_ENV_DATA_TEMPERATURE_FRAC_1_512_MSK		UINT16_C(0x0001)

#define CCS811_FW_BOOT_VERSION_MAJOR_MSK	UINT16_C(0xF000)
#define CCS811_FW_BOOT_VERSION_MINOR_MSK	UINT16_C(0x0F00)
#define CCS811_FW_BOOT_VERSION_TRIVIAL_MSK	UINT16_C(0x00FF)

#define CCS811_FW_APP_VERSION_MAJOR_MSK		UINT16_C(0xF000)
#define CCS811_FW_APP_VERSION_MINOR_MSK		UINT16_C(0x0F00)
#define CCS811_FW_APP_VERSION_TRIVIAL_MSK	UINT16_C(0x00FF)

#define CCS811_ERROR_ID_WRITE_REG_INVALID_MSK	UINT8_C(0x01)
#define CCS811_ERROR_ID_READ_REG_INVALID_MSK 	UINT8_C(0x02)
#define CCS811_ERROR_ID_MEASMODE_INVALID_MSK	UINT8_C(0x04)
#define CCS811_ERROR_ID_MAX_RESISTANCE_MSK	 	UINT8_C(0x08)
#define CCS811_ERROR_ID_HEATER_FAULT_MSK	 	UINT8_C(0x10)
#define CCS811_ERROR_ID_HEATER_SUPPLY_MSK	 	UINT8_C(0x20)

#define CCS811_APP_ERASE_COMPLETE_MSK	UINT8_C(0x40)

#define CCS811_APP_VERIFY_COMPLETE_MSK	UINT8_C(0x20)

/**\name Macros for Byte IDs in multi-byte registers */
#define CCS811_ALG_RESULT_DATA_ECO2_HIGH_BYTE	UINT8_C(0x00)
#define CCS811_ALG_RESULT_DATA_ECO2_LOW_BYTE	UINT8_C(0x01)
#define CCS811_ALG_RESULT_DATA_TVOC_HIGH_BYTE	UINT8_C(0x02)
#define CCS811_ALG_RESULT_DATA_TVOC_LOW_BYTE	UINT8_C(0x03)
#define CCS811_ALG_RESULT_DATA_STATUS_BYTE		UINT8_C(0x04)
#define CCS811_ALG_RESULT_DATA_ERROR_ID_BYTE	UINT8_C(0x05)
#define CCS811_ALG_RESULT_DATA_RAW_DATA_BYTE_0	UINT8_C(0x06)
#define CCS811_ALG_RESULT_DATA_RAW_DATA_BYTE_1	UINT8_C(0x07)

#define CCS811_RAW_DATA_BYTE_0	UINT8_C(0x00)
#define CCS811_RAW_DATA_BYTE_1	UINT8_C(0x01)

#define CCS811_ENV_DATA_HUMIDITY_HIGH_BYTE		UINT8_C(0x00)
#define CCS811_ENV_DATA_HUMIDITY_LOW_BYTE		UINT8_C(0x01)
#define CCS811_ENV_DATA_TEMPERATURE_HIGH_BYTE	UINT8_C(0x02)
#define CCS811_ENV_DATA_TEMPERATURE_LOW_BYTE	UINT8_C(0x03)

#define CCS811_NTC_VREF_MV_HIGH_BYTE	UINT8_C(0x00)
#define CCS811_NTC_VREF_MV_LOW_BYTE		UINT8_C(0x01)
#define CCS811_NTC_VNTC_MV_HIGH_BYTE	UINT8_C(0x02)
#define CCS811_NTC_VNTC_MV_LOW_BYTE		UINT8_C(0x03)

#define CCS811_THRESHOLDS_LOW_MED_HIGH_BYTE		UINT8_C(0x00)
#define CCS811_THRESHOLDS_LOW_MED_LOW_BYTE		UINT8_C(0x01)
#define CCS811_THRESHOLDS_MED_HIGH_HIGH_BYTE	UINT8_C(0x02)
#define CCS811_THRESHOLDS_MED_HIGH_LOW_BYTE		UINT8_C(0x03)
#define CCS811_THRESHOLDS_HYSTERESIS_BYTE		UINT8_C(0x04)

#define CCS811_FW_BOOT_VERSION_MAJOR_MINOR_BYTE	UINT8_C(0x00)
#define CCS811_FW_BOOT_VERSION_TRIVIAL_BYTE		UINT8_C(0x01)

#define CCS811_FW_APP_VERSION_MAJOR_MINOR_BYTE	UINT8_C(0x00)
#define CCS811_FW_APP_VERSION_TRIVIAL_BYTE		UINT8_C(0x01)

/**\name Macros to represent constants */
#define CCS811_HUMIDITY_DEFAULT_VALUE				UINT16_C(0x6400)	// 50%
#define CCS811_TEMPERATURE_DEFAULT_VALUE			UINT16_C(0x6400)	// 25 deg C

#define CCS811_THRESHOLD_LOW_MED_DEFAULT_VALUE		UINT16_C(0x05DC)	// 1500ppm
#define CCS811_THRESHOLD_MED_HIGH_DEFAULT_VALUE		UINT16_C(0x09C4)	// 2500ppm
#define CCS811_THRESHOLD_HYSTERESIS_DEFAULT_VALUE	UINT8_C(0x32)		// 50

#define CCS811_APP_ERASE_RESET_DEFAULT_VALUE_BYTE_0	UINT8_C(0xE7)
#define CCS811_APP_ERASE_RESET_DEFAULT_VALUE_BYTE_1	UINT8_C(0xA7)
#define CCS811_APP_ERASE_RESET_DEFAULT_VALUE_BYTE_2	UINT8_C(0xE6)
#define CCS811_APP_ERASE_RESET_DEFAULT_VALUE_BYTE_3	UINT8_C(0x09)

#define CCS811_SW_RESET_RESET_DEFAULT_VALUE_BYTE_0	UINT8_C(0x11)
#define CCS811_SW_RESET_RESET_DEFAULT_VALUE_BYTE_1	UINT8_C(0xE5)
#define CCS811_SW_RESET_RESET_DEFAULT_VALUE_BYTE_2	UINT8_C(0x72)
#define CCS811_SW_RESET_RESET_DEFAULT_VALUE_BYTE_3	UINT8_C(0x8A)

#define CCS811_APP_START_BOOT_TO_RUN_DEFAULT_VALUE	UINT8_C(0xF4)

/*!
 * @brief Interface selection Enums
 */
enum ccs811_drive_mode {
    /*! Idle (No measurements) */
    IDLE,

    /*! Constant Power Mode (Measurement every second) */
    CONSTANT_1S,

	/*! Pulse Heating Mode (Measurement every 10 seconds) */
	PULSE_10S,

	/*! Low Power Pulse Heating Mode (Measurement every 60 seconds) */
	PULSE_60S,

	/*! Constant Power Mode (Measurement every 250 milliseconds) */
	CONSTANT_250MS
};

/*!
 *	@brief Algorithm Result Data Struct
 */
struct ccs811_measurement_data {
	uint16_t eco2;
	uint16_t tvoc;
	uint8_t status;
	uint8_t error_id;
	uint16_t raw_data;
};

/*!
 *	@brief Threshold Data Struct
 */
struct ccs811_threshold_reg {
	uint16_t thresh_low;
	uint16_t thresh_high;
	uint8_t thresh_hyst;
};

/*!
 *	@brief CCS811 Device Struct
 */
struct ccs811_dev{
	/*! Hardware ID */
	uint8_t hw_id;

	/*! Measure Mode Reg */
	uint8_t measure_mode_reg;

	/*! Error Reg */
	uint8_t error_reg;

	/*! Drive Mode Enum */
	enum ccs811_drive_mode drive_mode;

	/*! Measurement Data */
	struct ccs811_measurement_data measurement_data;

	/*! Threshold */
	struct ccs811_threshold_reg threshold_reg;

};

#endif /* CCS811_CCS811_DEFS_H_ */
